name: Run Tests on Push to eojin Branch

on:
  push:
    branches:
      - eojin

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      APP-CONFIG: "test"

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8.18'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('app/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        pytest --disable-warnings
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_EOJIN_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_EOJIN_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, Tag, and Push image to ECR
      id: build-image
      env:
        IMAGE_TAG: flask-app-server
      run: |
        docker build -t $IMAGE_TAG .
        echo "Building the image..."
        docker tag flask-app-server:latest ${{ steps.login-ecr.outputs.registry }}/$IMAGE_TAG:latest
        echo "Pushing the image..."
        docker push ${{ steps.login-ecr.outputs.registry }}/$IMAGE_TAG:latest
        echo "${{ steps.login-ecr.outputs.registry }}/$IMAGE_TAG:latest pushed to ECR"